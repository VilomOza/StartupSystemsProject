<!DOCTYPE html>
<html lang="en">

<head>
  <%- include('../partials/head') %>
</head>

<body >
  <header>
    <%- include('../partials/nav', { hideSignIn: true }) %>
  </header>

<section class='hero is-fullheight' style = "background-image: url('static/header_frame.png'); background-attachment: fixed;
background-position: center;
background-repeat: no-repeat;
background-size: cover;
height: 100%;">
  <h2 class="subtitle has-text-warning">Log in to your existing account</a></h2>

  <form id="login-form" class="hero-body" >
    
    <input class = "input is-medium" type="email" name="email" placeholder="Your user name" /></p>
  
    <input class = "input is-medium" type="password" name="password" id="password" placeholder="Password"/></p>

    <button class = 'button is-medium'>
      Sign In
    </button>
    <div id="login-error">

    </div>
    </div>
  </form>
</section>

</body>
<script src="https://www.gstatic.com/firebasejs/9.6.4/firebase-app-compat.js"></script>
<script src="https://www.gstatic.com/firebasejs/9.6.4/firebase-auth-compat.js"></script>

<script>

  window.onload = () => {
    const firebaseConfig = {
      apiKey: "AIzaSyD2mq8xNyBnsS_toanHaMopNS3umfEzC-k",
      authDomain: "winecellar2022.firebaseapp.com",
      projectId: "winecellar2022",
      storageBucket: "winecellar2022.appspot.com",
      messagingSenderId: "971652091709",
      appId: "1:971652091709:web:329a62af128c629f267f54"
    };

    const app = firebase.initializeApp(firebaseConfig);

    app.auth().setPersistence(firebase.auth.Auth.Persistence.NONE);

    document
      .getElementById("login-form")
      .addEventListener("submit", (event) => {
        event.preventDefault();
        const email = event.target.email.value;
        const password = event.target.password.value;

      const auth = firebase.auth();
      auth.signInWithEmailAndPassword(email, password)
        .then((userCredential) => {
          const user = userCredential.user;
          return user.getIdToken()
        }).then(async idToken => {
        await fetch('/sessionLogin', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ idToken: idToken })
        }).then(() => console.log('Success!'))
      }).then(() => {
               window.location.assign('/dashboard');
             })
        .catch((error) => {
          const errorCode = error.code;
         const errorMessage = error.message;
        });
        return false;
      });
  };
</script>

</html>